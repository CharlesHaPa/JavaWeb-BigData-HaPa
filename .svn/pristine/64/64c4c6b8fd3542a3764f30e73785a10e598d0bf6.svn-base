package com.sw1408.controller;

import com.sw1408.service.ItemService;
import com.sw1408.vo.ItemDetail;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.sql.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

@Controller
public class ItemController {
    @Autowired
    private ItemService itemService;

    /**
     *
     * @param id
     * @return
     * @author dkq
     */
    @RequestMapping(value = "/item/queryDetailById", produces = {"application/json; charset=UTF-8"})
    public ModelAndView queryItemDetail(@RequestParam int id) {
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.addObject("itemDetail", itemService.getItemDetail(id));
        modelAndView.setViewName("item/queryDetail");
        return modelAndView;
    }

    @RequestMapping("item/personalItem")
    public ModelAndView queryPersonalItem(int clientId) {
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.addObject("itemDetailList", itemService.queryItemDetailByClientId(clientId));
        modelAndView.setViewName("item/queryDetail");
        return modelAndView;
    }

    @RequestMapping("/item/queryDetails")
    public ModelAndView queryItemsDetails(HttpServletRequest request, @RequestParam String itemType, @RequestParam String option, @RequestParam Date fromDate, @RequestParam Date toDate) {
        ModelAndView mav = new ModelAndView();
        List<ItemDetail> details;
        int clientId = 1;
       /* clientId = (int) request.getSession().getAttribute("clientId");*/
        mav.setViewName("item/queryDetail");
        List<ItemDetail> detailList = itemService.queryItemDetailByClientId(clientId);
       
        if (itemType.equals("notDepart")) {
            mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndDepartDateRange(clientId, new Date(new java.util.Date().getTime()), null));
        } else if (itemType.equals("hasDepart")) {
            mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndDepartDateRange(clientId, null, new Date(new java.util.Date().getTime())));
        } else if (option.equals("byCreateDate")) {
            if (itemType.equals("payed")) {
                mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndStatusAndCreateDateRange(clientId, "购买成功", fromDate, toDate));
            } else if (itemType.equals("notPayed")) {
                mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndStatusAndCreateDateRange(clientId, "未支付", fromDate, toDate));
            } else if (itemType.equals("returned")) {
                mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndStatusAndCreateDateRange(clientId, "return", fromDate, toDate));
            }
        } else if (option.equals("byDepartDate")) {
                mav.addObject("itemDetailList", itemService.queryItemDetailByClientIdAndDepartDateRange(clientId, fromDate, toDate));
        }
        return mav;
    }

}
