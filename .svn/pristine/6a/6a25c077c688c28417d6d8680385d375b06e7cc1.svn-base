package com.sw1408.controller;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.List;
import javax.servlet.http.HttpSession;

import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.sw1408.po.Client;
import com.sw1408.service.ClientService;
import com.github.pagehelper.PageInfo;
import com.sw1408.po.Passenger;
import com.sw1408.util.PageParams;

@Controller
public class ClientController {
	
	@Resource
	ClientService clientService;
	
	@Resource
	PageParams pageParams;
	

	@RequestMapping(value="/client/login",method=RequestMethod.POST)	
	public String login(String enterName,String psw,HttpServletRequest request,Model model){
		
		Client result=clientService.login(request.getParameter("enterName"),
				request.getParameter("psw"));
//		System.out.println(result);
		model.addAttribute("clientId", result.getId());
		model.addAttribute("clientName", result.getUserName());
		return "client/success";
	}

	
	/**
	 * 调用ClientService下的selectAllPassangers()方法，通过该用户的id查询该用户下所有乘客信息
	 * 
	 * @author SXY
	 * @return ModelAndView
	 */
	@RequestMapping("/client/frequentContactsTable")
	public ModelAndView frequentContactsTable(HttpSession session, HttpServletRequest request) {
		int pageNum;
		ModelAndView modelAndView = new ModelAndView();
		if ("null".equals(request.getParameter("pageNum")) || request.getParameter("pageNum") == null) {
			pageNum = 1;
		}else {
			pageNum = Integer.parseInt(request.getParameter("pageNum"));
		}
		pageParams.setPageSize(2);
		pageParams.setPageNum(pageNum);
		List<Passenger> list = clientService.selectAllPassengers(pageParams, 1);
		PageInfo<Passenger> pageInfo = new PageInfo<Passenger>(list);
		modelAndView.addObject("list", list);
		modelAndView.addObject("pageInfo",pageInfo);
		modelAndView.setViewName("/client/frequentContactsTable");
		return modelAndView;
	}

	@RequestMapping("/client/showFrequentContacts")
	public ModelAndView showFrequentContacts() {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("/client/showFrequentContacts");
		return modelAndView;
	}
	
	/**
	 * 调用ClientService下的addPassenger()方法，添加一个乘客
	 * 
	 * @author SXY
	 * @param name
	 *            Passenger's name
	 * @param cardId
	 *            Passenger's cardId
	 * @param gender
	 *            Passenger's gender
	 * @param isStudent
	 *            Mark passenger's type
	 * @return ModelAndView
	 */
	@RequestMapping(value = "/client/addPassenger", produces = {"application/json; charset=UTF-8"})
	public ModelAndView addPassenger(@ModelAttribute Passenger passenger) {
		
		ModelAndView modelAndView = new ModelAndView();
		/*System.out.println(passenger);*/
		Client client = new Client();
		client.setId(1);
		boolean result = clientService.addPassenger(passenger, client);
		System.out.println(passenger);
		if (result) {
			modelAndView.addObject("passenger", passenger);
			modelAndView.setViewName("/client/showFrequentContacts");
			return modelAndView;
		} else {
			modelAndView.setViewName("/client/error_addPassenger");
			return modelAndView;
		}
	}
	
	/**
	 * 调用ClientService下的updatePassengerInfo()方法，修改一个乘客信息
	 * 
	 * @author SXY
	 * @param name
	 *            Passenger's name
	 * @param cardId
	 *            Passenger's cardId
	 * @param gender
	 *            Passenger's gender
	 * @param isStudent
	 *            Mark passenger's type
	 * @return ModelAndView
	 */
	@RequestMapping("/client/updatePassenger")
	public ModelAndView updatePassenger(@ModelAttribute Passenger passenger) {
		System.out.println(passenger);
		ModelAndView modelAndView = new ModelAndView();
		//passenger.setId(25);
		boolean result = clientService.updatePassengerInfo(passenger);
		if (result) {
			modelAndView.addObject("passenger", passenger);
			modelAndView.setViewName("/client/showFrequentContacts");
			return modelAndView;
		} else {
			modelAndView.setViewName("/client/error_updatePassenger");
			return modelAndView;
		}
	}
	
	/**
	 * 删除乘客
	 * 
	 * @author SXY
	 * @param passenger
	 * @return
	 */
	@RequestMapping("/client/deletePassenger")
	public ModelAndView deletePassenger(HttpServletRequest request) {
		
		ModelAndView modelAndView = new ModelAndView();
		String cardId = (String) request.getParameter("cardId");
		System.out.println(cardId);
		boolean result = clientService.deletePassenger(cardId);
		System.out.println(result);
		if (result) {
			modelAndView.addObject("cardId", cardId);
			modelAndView.setViewName("/client/showFrequentContacts");
			return modelAndView;
		} else {
			modelAndView.setViewName("/client/error_deletePassenger");
			return modelAndView;
		}
	}
	
	/**
	 * test
	 * 
	 * @author SXY
	 * @return
	 */
	@RequestMapping("/client/test1")
	public ModelAndView testPage(HttpServletRequest request) {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("name", request.getParameter("name"));
		modelAndView.addObject("gender", request.getParameter("gender"));
		modelAndView.addObject("cardId", request.getParameter("cardId"));
		modelAndView.addObject("isStudent", request.getParameter("isStudent"));
		modelAndView.setViewName("/client/updateFrequentContact");
		return modelAndView;
	}
	
	@RequestMapping("/client/test")
	public ModelAndView testPage() {
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.setViewName("/client/addFrequentContact");
		return modelAndView;
	}
}
